# Pilot TV
tv_on_off:
  alias: Turn on TV
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: PowerToggle
        device: xxxxx

button_0:
  alias: Turn 0
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 0
        device: xxxxx

button_1:
  alias: Turn 1    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 1          
        device: xxxxx

button_2:
  alias: Turn 2    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 2          
        device: xxxxx

button_3:
  alias: Turn 3    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 3          
        device: xxxxx

button_4:
  alias: Turn 4    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 4          
        device: xxxxx

button_5:
  alias: Turn 5    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 5          
        device: xxxxx

button_6:
  alias: Turn 6    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 6          
        device: xxxxx

button_7:
  alias: Turn 7    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 7          
        device: xxxxx

button_8:
  alias: Turn 8    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 8          
        device: xxxxx

button_9:
  alias: Turn 9    
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: 9          
        device: xxxxx

button_ok:
  alias: Press OK
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Select
        device: xxxxx

button_mute:
  alias: Press mute
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Mute
        device: xxxxx

button_volume_up:
  alias: Press volume up
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: VolumeUp
        device: xxxxx

button_volume_down:
  alias: Press volume down
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: VolumeDown
        device: xxxxx

button_channel_up:
  alias: Press channel up
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: ChannelUp
        device: xxxxx

button_channel_down:
  alias: Press channel down
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: ChannelDown
        device: xxxxx

button_direction_left:
  alias: Press direction left
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionLeft
        device: xxxxx

button_direction_up:
  alias: Press direction up
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionUp
        device: xxxxx

button_direction_right:
  alias: Press direction right
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionRight
        device: xxxxx

button_direction_down:
  alias: Press direction down
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionDown
        device: xxxxx

button_menu:
  alias: Press menu
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Home
        device: xxxxx

button_back:
  alias: Press back
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Back
        device: xxxxx

button_guide:
  alias: Press guide
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Guide
        device: xxxxx

button_info:
  alias: Press info
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Info
        device: xxxxx

# Yamaha 
yamaha_on_off:
  alias: Yamaha On Off
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: PowerToggle
        device: xxxxx

yamaha_volume_up:
  alias: Yamaha volume up
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: VolumeUp
        device: xxxxx

yamaha_volume_down:
  alias: Yamaha volume down
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: VolumeDown
        device: xxxxx

yamaha_volume_mute:
  alias: Yamaha volume mute
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Mute
        device: xxxxx

yamaha_bluetooth:
  alias: Yamaha bluetooth  
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputBluetooth 
        device: xxxxx

yamaha_net_radio:
  alias: Yamaha net radio
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputNet
        device: xxxxx

yamaha_optical1:
  alias: Yamaha optical 1
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputOptical1 
        device: xxxxx

yamaha_optical2:
  alias: Yamaha optical 2
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputOptical2 
        device: xxxxx

yamaha_phono:
  alias: Yamaha phono
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputPhono
        device: xxxxx

yamaha_tuner:
  alias: Yamaha tuner
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: InputTuner
        device: xxxxx

# Harmony Hub Remote
harmony_yamaha_bluetooth:
  alias: Harmony Yamaha Bluetooth
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Yamaha Bluetooth') %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Yamaha Bluetooth'

harmony_yamaha_radio:
  alias: Harmony Yamaha Radio
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Yamaha Radio') %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Yamaha Radio'

harmony_yamaha_internet_radio:
  alias: Harmony Yamaha Internet Radio
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Yamaha Internet Radio') %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Yamaha Internet Radio'

harmony_yamaha_gramophone:
  alias: Harmony Yamaha Gramophone
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Yamaha Gramophone') %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Yamaha Gramophone'

harmony_optoma_movie:
  alias: Harmony Optoma Movie
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Optoma Movie') %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Optoma Movie'

harmony_tv:
  alias: Harmony TV
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Turn on TV')  %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Turn on TV'
        
harmony_netflix:
  alias: Harmony Netflix
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Turn on Netflix')  %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Turn on Netflix'
        
harmony_playstation:
  alias: Harmony PlayStation
  sequence:
    - service_template: >
        {% if is_state_attr('remote.harmony_hub', 'current_activity', 'Turn on PlayStation')  %}
          remote.turn_off
        {% else %}
          remote.turn_on
        {% endif %}
      data:
        entity_id: remote.harmony_hub
        activity: 'Turn on PlayStation'

# Philips Hue Lights
salon_hue:
  alias: Hue Lights Salon
  sequence:
    - service_template: >
        {% if is_state('light.salon', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.salon
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
        
salon_wiz_lights:
  alias: Wiz Lights Salon
  sequence:
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service_template: >
        {% if is_state('light.wiz_rgbw_tunable_xxxxx', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx

hall_hue:
  alias: Hue Lights Hall
  sequence:
    - service_template: >
        {% if is_state('light.hall', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.hall

bathroom_hue:
  alias: Hue Lights Bathroom
  sequence:
    - service_template: >
        {% if is_state('light.bathroom', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.bathroom

kitchen_hue:
  alias: Hue Lights Kitchen
  sequence:
    - service_template: >
        {% if is_state('light.kitchen', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.kitchen

kitche_leds_hue:
  alias: Hue Lights Kitchen Leds
  sequence:
    - service_template: >
        {% if is_state('light.kitche_leds', 'on')  %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      data:
        entity_id: light.kitche_leds

all_hue_lights_off:
  alias: Turn off all hue lights
  sequence:
    - service: light.turn_off
      data:
        entity_id: light.kitche_leds
    - service: light.turn_off     
      data:
        entity_id: light.kitchen
    - service: light.turn_off     
      data:
        entity_id: light.hall
    - service: light.turn_off     
      data:
        entity_id: light.salon
    - service: light.turn_off     
      data:
        entity_id: light.bathroom
    - service: light.turn_off     
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service: light.turn_off     
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx
    - service: light.turn_off     
      data:
        entity_id: light.wiz_rgbw_tunable_xxxxx

harmony_hub_turn_off:
  alias: Turn off Harmony Hub activity
  sequence:
    - service: remote.turn_off
      data:
        entity_id: remote.harmony_hub

# Optoma GT1080e
optoma_on_off:
  alias: Optoma Turn On
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: PowerOn
        device: xxxxx
        
optoma_direction_up:
  alias: Optoma direction up
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionUp
        device: xxxxx

optoma_direction_right:
  alias: Optoma direction right
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionRight
        device: xxxxx

optoma_direction_down:
  alias: Optoma direction down
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionDown
        device: xxxxx

optoma_direction_left:
  alias: Optoma direction left
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: DirectionLeft
        device: xxxxx

optoma_select:
  alias: Optoma select
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Select
        device: xxxxx

optoma_menu:
  alias: Optoma menu
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Menu
        device: xxxxx

optoma_source:
  alias: Optoma source
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Source  
        device: xxxxx

optoma_mute:
  alias: Optoma mute
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.harmony_hub
        command: Mute  
        device: xxxxx