# BMETERS WATER METERS
- platform: mqtt
  state_topic: "wmbusmeters/xxx"
  name: bmeters_xxx
  value_template: >
    {% set current = states('sensor.bmeters_xxx') | float | round(3) %}
    {% set new = value_json["total_m3"] | float | round(3)  %}
    {% macro max(X, Y) -%} {{X|float if X|float > Y|float else Y|float }} {%- endmacro %}
    {{ max(current, new) }}
  unit_of_measurement: 'm³'
  force_update: true
  expire_after: 604800

- platform: mqtt
  state_topic: "wmbusmeters/xxx"
  name: bmeters_xxx
  value_template: >
    {% set current = states('sensor.bmeters_xxx') | float | round(3) %}
    {% set new = value_json["total_m3"] | float | round(3) %}
    {% macro max(X, Y) -%} {{X|float if X|float > Y|float else Y|float }} {%- endmacro %}
    {{ max(current, new) }}
  unit_of_measurement: 'm³'
  force_update: true   
  expire_after: 604800

- platform: mqtt
  state_topic: "wmbusmeters/xxx"
  name: bmeters_xxx
  value_template: >
    {% set current = states('sensor.bmeters_xxx') | float | round(3) %}
    {% set new = value_json["total_m3"] | float | round(3)  %}
    {% macro max(X, Y) -%} {{X|float if X|float > Y|float else Y|float }} {%- endmacro %}
    {{ max(current, new) }}
  unit_of_measurement: 'm³'
  force_update: true
  expire_after: 604800
 
- platform: mqtt
  state_topic: "wmbusmeters/xxx"
  name: bmeters_xxx
  value_template: >
    {% set current = states('sensor.bmeters_xxx') | float | round(3) %}
    {% set new = value_json["total_m3"] | float | round(3) %}
    {% macro max(X, Y) -%} {{X|float if X|float > Y|float else Y|float }} {%- endmacro %}
    {{ max(current, new) }}
  unit_of_measurement: 'm³'
  force_update: true
  expire_after: 604800
  
- platform: template
  sensors:
    total_water:
      friendly_name: Total water
      unit_of_measurement: 'm³'
      value_template: >
        {% set current = states('sensor.total_water') | float | round(3) %}
        {% set new = (states('sensor.bmeters_xxx')|float + states('sensor.bmeters_xxx')|float + states('sensor.bmeters_xxx')|float + states('sensor.bmeters_xxx')|float)|round(3) %}
        {% macro max(X, Y) -%} {{X|float if X|float > Y|float else Y|float }} {%- endmacro %}
        {% if states('sensor.bmeters_xxx') | float > 0 and states('sensor.bmeters_xxx') | float > 0 and states('sensor.bmeters_xxx') | float > 0 and states('sensor.bmeters_xxx') | float | round(3) > 0 %}
          {{ max(current, new) }}
        {% else %}
          {{ states('sensor.total_water') }}
        {% endif %}
  
  # SMOGLY SENSORS
- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/temperature"
  name: "Smogly temperatura"
  unit_of_measurement: "ºC"

- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/humidity"
  name: "Smogly wilgotnosc"
  unit_of_measurement: "%"

- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/pressure"
  name: "Smogly cisnienie"
  unit_of_measurement: "hPa"

- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/PM1"
  name: "Smogly PM1"
  unit_of_measurement: "µg/m³"

- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/PM2.5"
  name: "Smogly PM2.5"
  unit_of_measurement: "µg/m³"

- platform: mqtt
  state_topic: "Smogly-2ED0EA/sensor/PM10"
  name: "Smogly PM10"
  unit_of_measurement: "µg/m³"

  # INODE SENSORS ENERGY
- platform: mqtt
  name: "Zuzycie chwilowe pradu"
  unit_of_measurement: 'W'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {# set new value found true #}
       {% set ns.found = true %}
       {% set p = 12 %}
       {{ ((((((val[p+4]~val[p+5]~val[p+2]~val[p+3])| int(base=16)))/5000)*60)*1000) | round(0) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.zuzycie_chwilowe_pradu') }}
    {% endif %}

- platform: mqtt
  name: "Licznik pradu"
  unit_of_measurement: 'kWh'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 18 %}
       {{ ((((val[p+6]~val[p+7]~val[p+4]~val[p+5]~val[p+2]~val[p+3]~val[p]~val[p+1])| int(base=16)))/5000) | round(2) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.licznik_pradu') }}
    {% endif %}
    
- platform: mqtt
  name: "Pomiar energii dzisiaj"
  unit_of_measurement: 'kWh'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 32 %}
       {{ ((val[p]~val[p+1])| int(base=16)) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.pomiar_energii_dzisiaj') }}
    {% endif %} 

- platform: mqtt
  name: "Bateria prad perc"
  unit_of_measurement: '%'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 30 %}
       {{ (((val[p]) | int(base=16)-2)*10) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.bateria_prad_perc') }}
    {% endif %} 

- platform: mqtt
  name: "Bateria prad napiecie"
  unit_of_measurement: 'V'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 30 %}
       {{ (((((val[p]) | int(base=16)-2)*10)*1.2)/100)+1.8 }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.bateria_prad_napiecie') }}
    {% endif %} 

  # INODE SENSORS GAS
- platform: mqtt
  name: "Zuzycie chwilowe gazu"
  unit_of_measurement: 'cm³'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {# set new value found true #}
       {% set ns.found = true %}
       {% set p = 12 %}
       {{ ((((((val[p+4]~val[p+5]~val[p+2]~val[p+3])| int(base=16)))/100)*60)*10000) | round(0) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.zuzycie_chwilowe_gazu') }}
    {% endif %}

- platform: mqtt
  name: "Licznik gazu"
  unit_of_measurement: 'm³'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 18 %}
       {{ ((((val[p+6]~val[p+7]~val[p+4]~val[p+5]~val[p+2]~val[p+3]~val[p]~val[p+1])| int(base=16)))/100) | round(2) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.licznik_gazu') }}
    {% endif %}
    
- platform: mqtt
  name: "Pomiar gazu dzisiaj"
  unit_of_measurement: 'm³'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 32 %}
       {{ ((val[p]~val[p+1])| int(base=16)) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.pomiar_gazu_dzisiaj') }}
    {% endif %} 

- platform: mqtt
  name: "Bateria gaz perc"
  unit_of_measurement: '%'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 30 %}
       {{ (((val[p]) | int(base=16)-2)*10) }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.bateria_gaz_perc') }}
    {% endif %} 

- platform: mqtt
  name: "Bateria gaz napiecie"
  unit_of_measurement: 'V'
  state_topic: "iNodeLAN/xxx"
  value_template: >
    {% set ns = namespace(found=false) %}
    {% for dev in value_json.data %}
     {% if dev.mac == 'xxx' %}
      {% set val = dev.rawData %}
      {% if (val[12:14] == "82") %}
       {% set ns.found = true %}
       {% set p = 30 %}
       {{ (((((val[p]) | int(base=16)-2)*10)*1.2)/100)+1.8 }}
      {% endif %}
     {% endif %}
    {% endfor %} 
    {% if not(ns.found) %}
     {{ states('sensor.bateria_gaz_napiecie') }}
    {% endif %} 

# QNAP SENSORS
- platform: qnap
  host: !secret qnap_ip
  verify_ssl: false
  username: !secret qnap_user
  password: !secret qnap_pass
  monitored_conditions:
    - status
    - system_temp
    - cpu_temp
    - cpu_usage
    - memory_free
    - memory_used
    - memory_percent_used
    - network_link_status
    - network_tx
    - network_rx
    - drive_smart_status
    - drive_temp
    - volume_size_free
    - volume_size_used
    - volume_percentage_used

# Philips led sensor
- platform: template
  sensors:
    led_senor_battery_level:
      friendly_name: "Led sensor battery level"
      value_template: "{{ state_attr('sensor.led_sensor_temperature', 'battery_level') }}"
      unit_of_measurement: "%"

# Xiaomi Roborock S6
- platform: template
  sensors:
    vacuum_status:
      friendly_name: Status
      entity_id:
        - vacuum.vacuum
      value_template: 'Status: {{ states.vacuum.vacuum.attributes.status }}'
      icon_template: >
        {% set val =  states.vacuum.vacuum.attributes.status  %}
        {% if val == 'Charging' %}
          mdi:battery-charging
        {% elif val == 'Cleaning' %}
          mdi:move-resize
        {% elif val == 'Returning home' %}
          mdi:keyboard-return
        {% elif val == 'Idle' %}
          mdi:dots-horizontal
        {% elif val == 'Paused' %}
          mdi:pause-circle
        {% else %}
          mdi:help-circle
        {% endif %}
    vacuum_fan_speed:
      friendly_name: Fan Speed
      entity_id:
        - vacuum.vacuum
      value_template: 'Mode: {{ states.vacuum.vacuum.attributes.fan_speed }}'
      icon_template: 'mdi:speedometer'
    vacuum_battery:
      friendly_name: Vacuum Battery
      entity_id:
        - vacuum.vacuum
      value_template: 'Battery: {{ states.vacuum.vacuum.attributes.battery_level }}'
      unit_of_measurement: '%'
      icon_template: '{{ states.vacuum.vacuum.attributes.battery_icon }}'
    vacuum_cleaning_time:
      friendly_name: Time of Last Cycle
      entity_id:
        - vacuum.vacuum
      value_template: '{{ states.vacuum.vacuum.attributes.cleaning_time }}'
      icon_template: 'mdi:timer'
    vacuum_total_cleaning_time:
      friendly_name: Total time of cleaning
      entity_id:
        - vacuum.vacuum
      value_template: '{{ states.vacuum.vacuum.attributes.total_cleaning_time }}'
      icon_template: 'mdi:timer'
    vacuum_cleaned_area:
      friendly_name: Area of Last Cycle
      unit_of_measurement: 'm ²'
      entity_id:
        - vacuum.vacuum
      value_template: '{{ states.vacuum.vacuum.attributes.cleaned_area }}'
      icon_template: 'mdi:ruler'
    vacuum_total_cleaned_area:
      friendly_name: Total area of cleaning
      unit_of_measurement: 'm ²'
      entity_id:
        - vacuum.vacuum
      value_template: '{{ states.vacuum.vacuum.attributes.total_cleaned_area }}'
      icon_template: 'mdi:ruler'
    vacuum_cleanmainbrush:
      friendly_name: Replace main brush
      unit_of_measurement: 'h'
      entity_id:
        - vacuum.vacuum
      value_template: 'Main Brush: {{ states.vacuum.vacuum.attributes.main_brush_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleansidebrush:
      friendly_name: Replace side brush
      unit_of_measurement: 'h'
      entity_id:
        - vacuum.vacuum
      value_template: 'Side brush: {{ states.vacuum.vacuum.attributes.side_brush_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleanfilter:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      entity_id:
        - vacuum.vacuum
      value_template: 'Filter: {{ states.vacuum.vacuum.attributes.filter_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_sensordirtyleft:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      entity_id:
        - vacuum.vacuum
      value_template: 'Sensor: {{ states.vacuum.vacuum.attributes.sensor_dirty_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_do_not_disturb:
      friendly_name: Do Not Disturb
      entity_id:
        - vacuum.vacuum
      value_template: '{{ states.vacuum.vacuum.attributes.do_not_disturb }}'
      icon_template: >
        {% set val =  states.vacuum.vacuum.attributes.do_not_disturb  %}
        {% if val == 'on' %}
          mdi:do-not-disturb
        {% else %}
          mdi:do-not-disturb-off
        {% endif %}
    vacuum_name:
      value_template: 'Odkurzacz'

# Pilot TV
- platform: template
  sensors:
    tv_name:
      value_template: 'Telewizor'

# Yamaha Amplituner
- platform: template
  sensors:
    yamaha_name:
      value_template: 'Amplituner'

# Xiaomi Humidifier
- platform: template
  sensors:
    humidifier_name:
      value_template: 'Nawilżacz'

# Harmony Hub Remote
- platform: template
  sensors:
    harmony_name:
      value_template: 'Aktywności'

# Philips Hue
- platform: template
  sensors:
    philips_hue:
      value_template: 'Oświetlenie'

# Philips Hue Motion Sensor
- platform: template
  sensors:
    hue_motion:
      value_template: 'Czujnik ruchu'

# LG washer-dryer
- platform: template
  sensors:
    pralko_suszarka:
      value_template: 'Pralko-suszarka'
    washer_cycle_state:
      value_template: "{{state_attr('sensor.pralka', 'remain_time')}}"
      friendly_name: Washer Cycle State
    washer_cycles_num:
      value_template: "{{state_attr('sensor.pralka', 'tubclean_count')}}"
      friendly_name: Washer Cycles Number
    washer_initial_time:
      value_template: "{{state_attr('sensor.pralka', 'initial_time')}}"
      friendly_name: Washer Cycle Initial Time
    washer_current_course:
      value_template: "{{state_attr('sensor.pralka', 'current_course')}}"
      friendly_name: Washer Current Course
    washer_spin_option_state:
      value_template: "{{state_attr('sensor.pralka', 'spin_option_state')}}"
      friendly_name: Washer Spin Option State
    washer_watertemp_option_state:
      value_template: "{{state_attr('sensor.pralka', 'watertemp_option_state')}}"
      friendly_name: Washer Watertemp Option State
    washer_drylevel_option_state:
      value_template: "{{state_attr('sensor.pralka', 'drylevel_option_state')}}"
      friendly_name: Washer Drylevel Option State
    washer_reserve_time:
      value_template: "{{state_attr('sensor.pralka', 'reserve_time')}}"
      friendly_name: Washer Reserve Time
      
# Optoma GT 1080e
- platform: template
  sensors:
    rzutnik_optoma:
      value_template: 'Rzutnik'

# Qnap TS-453Be
- platform: template
  sensors:
    serwer_qnap:
      value_template: 'Serwer NAS'

# Play Station 4 PRO
- platform: template
  sensors:
    play_station:
      value_template: 'Play Station'
      
# Plex
- platform: plex_recently_added
  name: Recently Added Movies
  token: !secret plex_token
  host: !secret plex_host
  port: !secret plex_port
  max: 7
  section_types:
    - movie
  exclude_keywords:
    - Ewa
    - img
    
- platform: plex_recently_added
  name: Recently Added TV
  token: !secret plex_token
  host: !secret plex_host
  port: !secret plex_port
  section_types:
    - show
    
# Tautulli
- platform: tautulli
  api_key: !secret tautulli_api_key
  host: !secret tautulli_host
  port: !secret tautulli_port
  
- platform: template
  sensors:
    tautulli_wan_bandwidth:
      friendly_name: "Wan Bandwidth"
      value_template: "{{ (state_attr('sensor.tautulli', 'wan_bandwidth') / 1024) | round(2) }}"
      unit_of_measurement: "Mbps"
    tautulli_lan_bandwidth:
      friendly_name: "Lan Bandwidth"
      value_template: "{{ (state_attr('sensor.tautulli', 'lan_bandwidth') / 1024) | round(2) }}"
      unit_of_measurement: "Mbps"
    tautulli_total_bandwidth:
      friendly_name: "Total Bandwidth"
      value_template: "{{ (state_attr('sensor.tautulli', 'total_bandwidth') / 1024) | round(2) }}"
      unit_of_measurement: "Mbps"
    tautulli_top_user:
      friendly_name: "Top User"
      value_template: "{{state_attr('sensor.tautulli', 'Top User')}}"
    tautulli_top_movie:
      friendly_name: "Top Movie"
      value_template: "{{state_attr('sensor.tautulli', 'Top Movie')}}"
    tautulli_top_tv_show:
      friendly_name: "Top TV Show"
      value_template: "{{state_attr('sensor.tautulli', 'Top TV Show')}}"
    tautulli_stream_count:
      friendly_name: "Stream Count"
      value_template: "{{state_attr('sensor.tautulli', 'stream_count')}}"
    tautulli_stream_count_transcode:
      friendly_name: "Stream Count Transcode"
      value_template: "{{state_attr('sensor.tautulli', 'stream_count_transcode')}}"
      
# Yahoo finance
- platform: template
  sensors:
    eurpln_change:
      value_template: '{{ states.sensor.yahoofinance_eurpln_x.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    usdpln_change:
      value_template: '{{ states.sensor.yahoofinance_pln_x.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    gbppln_change:
      value_template: '{{ states.sensor.yahoofinance_gbppln_x.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    eurusd_change:
      value_template: '{{ states.sensor.yahoofinance_eurusd_x.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    btcusd_change:
      value_template: '{{ states.sensor.yahoofinance_btc_usd.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    ethusd_change:
      value_template: '{{ states.sensor.yahoofinance_eth_usd.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    dogeusd_change:
      value_template: '{{ states.sensor.yahoofinance_doge_usd.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    solusd_change:
      value_template: '{{ states.sensor.yahoofinance_sol_usd.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    wig20_change:
      value_template: '{{ states.sensor.yahoofinance_wig20_wa.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    wig_change:
      value_template: '{{ states.sensor.yahoofinance_wig_wa.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    sp500_change:
      value_template: '{{ states.sensor.yahoofinance_gspc.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    djia_change:
      value_template: '{{ states.sensor.yahoofinance_dji.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    ftse_change:
      value_template: '{{ states.sensor.yahoofinance_ftse.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    dax_change:
      value_template: '{{ states.sensor.yahoofinance_gdaxi.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    n225_change:
      value_template: '{{ states.sensor.yahoofinance_n225.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    sse_change:
      value_template: '{{ states.sensor.yahoofinance_000001_ss.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    gold_change:
      value_template: '{{ states.sensor.yahoofinance_gc_f.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    silver_change:
      value_template: '{{ states.sensor.yahoofinance_si_f.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    copper_change:
      value_template: '{{ states.sensor.yahoofinance_hg_f.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    oil_change:
      value_template: '{{ states.sensor.yahoofinance_bz_f.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    apple_change:
      value_template: '{{ states.sensor.yahoofinance_aapl.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    microsoft_change:
      value_template: '{{ states.sensor.yahoofinance_msft.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    alphabet_change:
      value_template: '{{ states.sensor.yahoofinance_goog.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    meta_change:
      value_template: '{{ states.sensor.yahoofinance_fb.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    amazon_change:
      value_template: '{{ states.sensor.yahoofinance_amzn.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    tesla_change:
      value_template: '{{ states.sensor.yahoofinance_tsla.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    buffet_change:
      value_template: '{{ states.sensor.yahoofinance_brk_b.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    jpmorgan_change:
      value_template: '{{ states.sensor.yahoofinance_jpm.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'

- platform: template
  sensors:
    aramco_change:
      value_template: '{{ states.sensor.yahoofinance_2222_sr.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    tencent_change:
      value_template: '{{ states.sensor.yahoofinance_0700_hk.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    alibaba_change:
      value_template: '{{ states.sensor.yahoofinance_9988_hk.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    tsmc_change:
      value_template: '{{ states.sensor.yahoofinance_2330_tw.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    samsung_change:
      value_template: '{{ states.sensor.yahoofinance_005930_ks.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    lvmh_change:
      value_template: '{{ states.sensor.yahoofinance_mc_pa.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    pkobp_change:
      value_template: '{{ states.sensor.yahoofinance_pko_wa.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    cdr_change:
      value_template: '{{ states.sensor.yahoofinance_cdr_wa.attributes.regularMarketChangePercent}}'
      unit_of_measurement: '%'